class Student:
    def __init__(self, email, names):
        self.email = email
        self.names = names
        self.courses_registered = {}
        self.gpa = 0.0

    def register_for_course(self, course_name, grade):
        self.courses_registered[course_name] = grade
        self.calculate_gpa()

    def calculate_gpa(self):
        if self.courses_registered:
            total_points = sum(self.courses_registered.values())
            self.gpa = total_points / len(self.courses_registered)
        else:
            self.gpa = 0.0

class Course:
    def __init__(self, name, trimester, credits):
        self.name = name
        self.trimester = trimester
        self.credits = credits

class GradeBook:
    def __init__(self):
        self.student_list = []
        self.course_list = []

    def add_student(self, email, names):
        student = Student(email, names)
        self.student_list.append(student)

    def add_course(self, name, trimester, credits):
        course = Course(name, trimester, credits)
        self.course_list.append(course)

    def register_student_for_course(self, student_email, course_name, grade):
        student = next((s for s in self.student_list if s.email == student_email), None)
        if student:
            student.register_for_course(course_name, grade)

    def calculate_ranking(self):
        self.student_list.sort(key=lambda s: s.gpa, reverse=True)
        return self.student_list

    def search_by_grade(self, course_name, grade_range):
        return [s for s in self.student_list if s.courses_registered.get(course_name, 0) in grade_range]

    def generate_transcript(self, student_email):
        student = next((s for s in self.student_list if s.email == student_email), None)
        if student:
            return f"Transcript for {student.names}\nGPA: {student.gpa}\nCourses: {student.courses_registered}"

# Example usage:
gradebook = GradeBook()
gradebook.add_student('student1@example.com', 'Student One')
gradebook.add_course('Math 101', 'Trimester 1', 3)
gradebook.register_student_for_course('student1@example.com', 'Math 101', 4.0)
print(gradebook.generate_transcript('student1@example.com'))
